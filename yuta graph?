function plot_MUA_LECdepth(mouseName)
% ================================================================
%  Purpose: Average MUA depth profile (LEC region only)
%  Notes:
%   • Skips sessions missing .xml or .MUA.mat
%   • Aligns channels using XML coordinates (shank E & F)
%   • Produces Yuta-style smooth mean ± SEM plot
% ================================================================

rootDir = fullfile('Z:\Buzsakilabspace\LabShare\JunH\Photometry', mouseName);
sessions = dir(fullfile(rootDir, '**', '*.MUA.mat'));
nSessions = 0; % count usable sessions
MUA_all = [];

commonDepth = linspace(0, 1300, 200); % µm range for LEC region (shank E/F)

for i = 1:numel(sessions)
    muaPath = fullfile(sessions(i).folder, sessions(i).name);
    xmlPath = fullfile(sessions(i).folder, [sessions(i).name(1:end-8) '.xml']);

    % --- Skip sessions missing XML ---
    if ~isfile(xmlPath)
        fprintf('⚠️ Skipping: %s (no XML found)\n', sessions(i).name);
        continue;
    end

    % --- Load MUA data ---
    dataStruct = load(muaPath);
    if ~isfield(dataStruct, 'MUA') || ~isfield(dataStruct.MUA, 'data')
        fprintf('⚠️ Skipping: %s (no valid MUA data)\n', sessions(i).name);
        continue;
    end
    MUA = dataStruct.MUA;

    % --- Parse electrode geometry from XML ---
    try
        xml = xml2struct(xmlPath);
        chE = str2double({xml.parameters.channelCoordinates.shank{5}.channelCoordinate.channel});
        yE  = str2double({xml.parameters.channelCoordinates.shank{5}.channelCoordinate.y});
        chF = str2double({xml.parameters.channelCoordinates.shank{6}.channelCoordinate.channel});
        yF  = str2double({xml.parameters.channelCoordinates.shank{6}.channelCoordinate.y});
    catch
        fprintf('⚠️ Skipping: %s (XML parse error)\n', sessions(i).name);
        continue;
    end

    lecCh = [chE chF];
    lecY  = [yE yF];
    [lecY, sortIdx] = sort(lecY);
    lecCh = lecCh(sortIdx) + 1; % MATLAB 1-indexed

    % --- Check if channels exist in MUA data ---
    validCh = lecCh(lecCh <= size(MUA.data,2));
    if isempty(validCh)
        fprintf('⚠️ Skipping: %s (no matching channels)\n', sessions(i).name);
        continue;
    end

    % --- Compute normalized power ---
    meanPower = mean(MUA.data(:,validCh),1);
    normPower = meanPower / max(meanPower);

    % --- Interpolate to common depth grid ---
    interpMUA = interp1(lecY(1:numel(normPower)), normPower, commonDepth, 'pchip', 'extrap');

    % --- Smooth along depth ---
    smoothed = smoothdata(interpMUA, 'gaussian', 10);

    % --- Store for averaging ---
    nSessions = nSessions + 1;
    MUA_all(nSessions,:) = smoothed;
    fprintf('✅ Included: %s\n', sessions(i).name);
end

if nSessions == 0
    warning('No valid sessions found for %s.', mouseName);
    return;
end

% --- Average across sessions ---
meanMUA = mean(MUA_all,1);
semMUA  = std(MUA_all,[],1)/sqrt(nSessions);

% --- Plot like Yuta Fig. H ---
figure('Color','w'); hold on;
fill([meanMUA-semMUA, fliplr(meanMUA+semMUA)], ...
     [commonDepth, fliplr(commonDepth)], ...
     [0.85 0.85 0.85], 'EdgeColor','none');
plot(meanMUA, commonDepth, 'k', 'LineWidth', 2);
set(gca, 'YDir','reverse');
xlabel('Normalized MUA power (500 Hz – 5 kHz)');
ylabel('Depth (µm)');
title(sprintf('LEC MUA depth profile (n = %d sessions)', nSessions));
box off;

fprintf('\n✅ Completed: %d valid sessions plotted.\n', nSessions);
end
