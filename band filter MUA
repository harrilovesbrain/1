%% ================================================================
%  filterMUA_full.m
%  Author: Harry Lee (Buzsáki Lab)
%  Purpose: From a raw .dat file, extract MUA band (500–5000 Hz),
%           rectify, smooth, downsample, and save .MUA.mat
% ================================================================

clear; clc;

%% 1️⃣  SELECT SESSION
%  Change this to your own session folder and file:
fileDat = 'Z:\Buzsakilabspace\LabShare\JunH\Photometry\HJ017\250903\HJ017_250903_060719\HJ017_250903_060719.dat';
load('Z:\Buzsakilabspace\LabShare\JunH\Photometry\HJ017\250903\HJ017_250903_060719\HJ017_250903_060719_sessionInfo.mat');

fs        = sessionInfo.rates.wideband;   % raw sampling rate (Hz)
nChannels = sessionInfo.nChannels;        % total channels
channels  = 1:nChannels;                  % channels to process

fprintf('Loaded session %s  |  %d ch  @  %.0f Hz\n', ...
        sessionInfo.FileName, nChannels, fs);

%% 2️⃣  DEFINE FILTER PARAMETERS
lowCut  = 500;          % lower cutoff (Hz)
highCut = 5000;         % upper cutoff (Hz)
order   = 3;            % Butterworth order
[b,a]   = butter(order, [lowCut highCut]/(fs/2), 'bandpass');

targetFs = 1250;                     % desired downsampled rate
dsFactor = round(fs/targetFs);       % downsample ratio

%% 3️⃣  PROCESS EACH CHANNEL
mua_cell = cell(numel(channels),1);

for k = 1:numel(channels)
    ch = channels(k);
    fprintf('Filtering channel %d/%d ...\n', ch, nChannels);

    % ---- Load raw signal from .dat ----
    raw = bz_LoadBinary(fileDat, ...
        'channels', ch, ...
        'nChannels', nChannels, ...
        'precision', 'int16');

    % ---- Step 1: Band-pass filter (500–5000 Hz) ----
    sig_bp = filtfilt(b,a,double(raw));

    % ---- Step 2: Rectify (absolute value) ----
    sig_rect = abs(sig_bp);

    % ---- Step 3: Smooth (≈2 ms Gaussian window) ----
    win = round(fs * 0.002);                % 2 ms window
    sig_env = smoothdata(sig_rect,'gaussian',win);

    % ---- Step 4: Downsample to 1.25 kHz ----
    sig_env_ds = downsample(sig_env, dsFactor);

    % ---- Store result ----
    mua_cell{k} = single(sig_env_ds);
end

%% 4️⃣  COMBINE ALL CHANNELS INTO ONE MATRIX
minLen = min(cellfun(@numel, mua_cell));
MUA.data     = zeros(minLen, numel(channels), 'single');
for k = 1:numel(channels)
    MUA.data(:,k) = mua_cell{k}(1:minLen);
end
MUA.fs       = fs/dsFactor;
MUA.band     = [lowCut highCut];
MUA.channels = channels;

%% 5️⃣  SAVE RESULT
outFile = fullfile(fileparts(fileDat), [sessionInfo.FileName '.MUA.mat']);
save(outFile, 'MUA', '-v7.3');
fprintf('\n✅ Saved MUA file:\n%s\n', outFile);

%% 6️⃣  QUICK VISUAL CHECK
figure;
imagesc(zscore(MUA.data,[],1)'); axis xy;
xlabel('Time (samples)'); ylabel('Channel (1=superficial)');
title(sprintf('MUA Envelope  (%d – %d Hz band)', lowCut, highCut));
colormap jet; colorbar;
